// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WEB_PROJ;

namespace WEB_PROJ.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Russian_Russia.1251")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WEB_PROJ.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("status");
                });

            modelBuilder.Entity("WEB_PROJ.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<DateTime?>("DateBirth")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character(25)")
                        .HasColumnName("email")
                        .IsFixedLength(true);

                    b.Property<string>("Facebook")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("facebook");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("first_name");

                    b.Property<string>("Instagram")
                        .HasColumnType("text");

                    b.Property<bool?>("IsVerificated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("is_verificated")
                        .HasDefaultValueSql("false");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("last_name");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("login");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character(64)")
                        .HasColumnName("password")
                        .IsFixedLength(true);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("password_salt")
                        .IsFixedLength(true);

                    b.Property<string>("PatronymicName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("patronymic_name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone");

                    b.Property<string>("PursePerfectMoneyUsd")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("purse_perfect_money_usd");

                    b.Property<string>("RegionName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("region_name");

                    b.Property<string>("Skype")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("skype");

                    b.Property<int?>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("status_id")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Telegram")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("telegram");

                    b.Property<string>("Twitter")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("instagram");

                    b.Property<string>("Vk")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("vk");

                    b.Property<string>("Youtube")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("youtube");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WEB_PROJ.User", b =>
                {
                    b.HasOne("WEB_PROJ.Status", "Status")
                        .WithMany("Users")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("users_status_id_fkey");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WEB_PROJ.Status", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
